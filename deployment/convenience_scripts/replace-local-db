#!/bin/bash
set -o nounset
set -o errexit

# NOTE: This script is used to overwrite an existing DB with a DB from either
# beta or production.

# The script expects three arguments:

# 1. Environment (beta or production)
# 2. Local DB name (found in site_settings.py)
# 3. Local user for db (found in site_settings.py)

# Example:

# Running `./deployment/convenience_scripts/replace-local-db beta storage.pg postgres`
# would replace the `storage.pg` db for user `postgres` with the db from beta.
# It will also overwrite the website/django/uploads/ directory.

HOST=${HOST:-brcaexchange.org}
USER=brca

# Expects environment (beta or production) as first argument.
ENVIRONMENT=$1
LOCALDBNAME=$2
LOCALUSER=$3

if [ "${ENVIRONMENT}" == "beta" ] ;then
    REMOTEDBNAME=storage.pg
elif [ "${ENVIRONMENT}" == "production" ] ;then
	REMOTEDBNAME=production.pg
else
	echo "ERROR: Please only enter 'beta' or 'production' as environment."
    exit 1
fi

# Create DB dump from remote.
ssh -l${USER} ${HOST} <<-ENDSSH
	set -o errexit
	. /var/www/backend/${ENVIRONMENT}/virtualenv3/bin/activate
	sudo -u postgres pg_dump -d ${REMOTEDBNAME} -F c -c -f /data/backup_dump/full_db.dump
ENDSSH

echo "Created db dump on remote at /data/backup_dump/full_db.dump."

# directory of this file
CONVENIENCESCRIPTS="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
WEBSITE=${CONVENIENCESCRIPTS}/../../website

REMOTEUPLOADS=/var/www/backend/${ENVIRONMENT}/django/uploads

cd ${WEBSITE}

# Copy remote uploads directory to local (contains community data specified in db)
rsync -a --rsync-path='sudo rsync' ${USER}@${HOST}:${REMOTEUPLOADS} ./django/uploads/ --delete
echo "Rsync'd remote uploads/ dir to local."
# Copy db dump to local
rsync -a --rsync-path='sudo rsync' ${USER}@${HOST}:/data/backup_dump/full_db.dump /data/backup_dump
echo "Moved db dump to local /data/backup_dump."

# Overwrite local db with db dump.
#pg_restore /data/backup_dump/full_db.dump -c -v -1 -d ${LOCALDBNAME}
sudo -u postgres pg_restore /data/backup_dump/full_db.dump -c -v -1 -d ${LOCALDBNAME}

echo "Complete!"
