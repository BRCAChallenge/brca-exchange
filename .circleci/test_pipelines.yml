version: 2
jobs:
   test-pipeline:
     working_directory: /pipeline
     docker:
       - image: docker:17.05.0-ce-git
       # heavily inspired from  https://circleci.com/blog/how-to-build-a-docker-image-on-circleci-2-0/
     steps:
       - run:
           name: Fix apt sources for buster
           command: |
             sudo sed -i 's|deb.debian.org/debian|archive.debian.org/debian|g' /etc/apt/sources.list
             sudo sed -i '/security.debian.org/s|deb.debian.org|archive.debian.org|g' /etc/apt/sources.list
             sudo sed -i '/buster-updates/d' /etc/apt/sources.list
             sudo apt-get update
       - checkout
       - setup_remote_docker
       - run:
           name: Install dependencies
           command: |
             apk add --no-cache \
               py-pip=9.0.0-r1
       - restore_cache:
           keys:
             - v1-{{ .Branch }}
           paths:
             - /caches/pipeline.tar
       - run:
           name: Load Docker image layer cache
           command: |
             set +o pipefail
             docker load -i /caches/pipeline.tar | true
       - run:
           name: Build application Docker image
           working_directory: /pipeline
           command: |
             docker build --cache-from=pipeline -t pipeline -f /pipeline/pipeline/docker/Dockerfile .
       - run:
           name: Run tests
           command: |
             docker run pipeline bash -c 'cd /opt/brca-exchange/pipeline/data && bash getdata && cd /opt/brca-exchange/pipeline && pytest --ignore=splicing/ --junitxml=~/test_reports/pytest-results.xml'
       - run:
           name: Save Docker image layer cache
           command: |
             mkdir -p /caches
             docker save -o /caches/pipeline.tar pipeline
       - save_cache:
           key: v1-{{ .Branch }}-{{ epoch }}
           paths:
             - /caches/pipeline.tar
       - store_test_results:
           path: ~/test_reports_pipeline
   test-splicing-pipeline:
     working_directory: /splicing-pipeline
     docker:
       - image: docker:17.05.0-ce-git
    # heavily inspired from https://circleci.com/blog/how-to-build-a-docker-image-on-circleci-2-0/
     steps:
       - checkout
       - setup_remote_docker
       - run:
           name: Install dependencies
           command: |
             apk add --no-cache \
               py-pip=9.0.0-r1 make
       - restore_cache:
           keys:
             - v1-{{ .Branch }}
           paths:
             - /caches/splicing-pipeline.tar
       - run:
           name: Load Docker image layer cache
           command: |
             set +o pipefail
             docker load -i /caches/splicing-pipeline.tar | true
       - run:
           name: Build application Docker image
           working_directory: /splicing-pipeline/pipeline/splicing
           command: |
             docker build --cache-from=splicing-pipeline -t splicing-pipeline .
       - run:
           name: Run tests
           working_directory: /splicing-pipeline/pipeline/splicing
           command: |
             make unit_tests_docker -e IMAGE_NAME=brcachallenge/splicing-pipeline:0.0.8
       - run:
           name: Save Docker image layer cache
           command: |
             mkdir -p /caches
             docker save -o /caches/splicing-pipeline.tar splicing-pipeline
       - save_cache:
           key: v1-{{ .Branch }}-{{ epoch }}
           paths:
             - /caches/splicing-pipeline.tar
workflows:
   version: 2
   test-back-end:
     jobs:
       - test-pipeline:
           filters:
             tags:
               only: /.*/
       - test-splicing-pipeline:
          filters:
             tags:
               only: /.*/
